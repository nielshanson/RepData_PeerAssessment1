unz
setwd("~/Desktop/data_science/05_reproduce/assign/RepData_PeerAssessment1/")
act_data <- read.csv(unz("activity.zip", "activity.csv"))
head(act_data)
summary(act_data)
act_data[!is.na(act_data$steps),]
act_data <- act_data[!is.na(act_data$steps),] # remove NAs
haed(act_data)
head(act_data)
?apply
n <- 17; fac <- factor(rep(1:3, length = n), levels = 1:5)
table(fac)
tapply(1:n, fac, sum)
require(stats)
presidents
cycle(presidents)
tapply(presidents, cycle(presidents), mean, na.rm = TRUE)
tapply(act_data, date, sum)
tapply(act_data$steps, act_data$date, sum)
head(act_data)
act_data[act_data$date == "2012-10-01",]
act_data[act_data$date == "2012-10-02",]
act_data[act_data$date == "2012-10-02",]$steps
sum(act_data[act_data$date == "2012-10-02",]$steps)
tapply(act_data$steps, act_data$date, sum)
steps_per_day = tapply(act_data$steps, act_data$date, sum)
steps_per_day = steps_per_day[as.na(steps_per_day)] = 0
steps_per_day = steps_per_day[is.na(steps_per_day)] = 0
steps_per_day
is.na(steps_per_day)
steps_per_day = tapply(act_data$steps, act_data$date, sum)
steps_per_day[is.na(steps_per_day)] = 0
steps_per_day
plot(steps_per_day)
plot(steps_per_day, type="l")
plot(steps_per_day, names(steps_per_day))
plot(steps_per_day, colnames(steps_per_day))
plot(steps_per_day, colNames(steps_per_day))
colNames(steps_per_day)
head(steps_per_day
)_
head(steps_per_day)
names(steps_per_day)
plot(steps_per_day, names(steps_per_day))
steps_per_day
plot(steps_per_day, as.date(names(steps_per_day))
)
as.Date(names(steps_per_day))
plot(as.Date(names(steps_per_day)))
plot(steps_per_day,as.Date(names(steps_per_day)))
plot(as.Date(names(steps_per_day)), steps_per_day)
library(lattice)
xyplot(as.Date(names(steps_per_day)), steps_per_day)
steps_per_day = tapply(act_data$steps, act_data$date, sum)
steps_per_day[is.na(steps_per_day)] = 0
# createa data frame
df <- data.frame(total_steps=steps_per_day, date=as.Date(names(steps_per_day)))
df
xyplot(total_steps~date,data=df)
df <- data.frame(totalSteps=steps_per_day, date=as.Date(names(steps_per_day)))
library(lattice)
xyplot(total_steps~date,data=df)
xyplot(totalSteps~date,data=df)
?xyplot
barchart(totalSteps~date,data=df)
barchart(date~totalSteps,data=df)
xyplot(totalSteps~date,data=df)
?xyplot
xyplot(totalSteps~date, panel=panel.smoother, data=df)
panel.smoother <- function(x, y) {
panel.xyplot(x, y) # show points
panel.loess(x, y)  # show smoothed line
}
xyplot(totalSteps~date, panel=panel.smoother, data=df)
?loess
library(xtable)
?xtable
xtable(df, type = "html")
xtable(df, type = "html")
df <- data.frame(totalSteps=steps_per_day, date=as.Date(names(steps_per_day)))
df
library(xtable)
xtable(df, type = "html")
?xtable
steps_per_day
as.vector(steps_per_day)
?xtable
tab <- xtable(df, display=c("d","s"))
mean(df$totalSteps)
mean_total_steps<- round(mean(df$totalSteps))
mean_total_steps
head(act_data)
act_data[act_data$date == "2012-10-02", ]
act_data[act_data$date == "2012-10-03", ]
xyplot(totalSteps~interval, panel=panel.smooth, data=df)
steps_per_interval = tapply(act_data$steps, act_data$interval, mean)
head(steps_per_interval)
plot(steps_per_interval)
plot(mean_steps_per_interval, names(mean_steps_per_interval))
mean_steps_per_interval = tapply(act_data$steps, act_data$interval, mean)
plot(mean_steps_per_interval, names(mean_steps_per_interval))
plot(names(mean_steps_per_interval), mean_steps_per_interval)
points(act_data$steps)
plot(names(mean_steps_per_interval), mean_steps_per_interval)
points(act_data$interval, act_data$steps)
plot(names(mean_steps_per_interval), mean_steps_per_interval)
points(act_data$interval, act_data$steps, col = alpha("light blue", 0.25))
library(scales)
mean_steps_per_interval = tapply(act_data$steps, act_data$interval, mean)
plot(names(mean_steps_per_interval), mean_steps_per_interval)
points(act_data$interval, act_data$steps, col = alpha("light blue", 0.25), pch=16)
plot(act_data$interval, act_data$steps, col = alpha("light blue", 0.25), pch=16)
points(names(mean_steps_per_interval), mean_steps_per_interval)
lines(names(mean_steps_per_interval), mean_steps_per_interval)
plot(act_data$interval, act_data$steps, col = alpha("light blue", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval)
mean_steps_per_interval = tapply(act_data$steps, act_data$interval, sd)
mean_steps_per_interval = tapply(act_data$steps, act_data$interval, mean)
sd_steps_per_interval = tapply(act_data$steps, act_data$interval, sd)
library(scales)
mean_steps_per_interval = tapply(act_data$steps, act_data$interval, mean)
sd_steps_per_interval = tapply(act_data$steps, act_data$interval, sd)
plot(act_data$interval, act_data$steps, col = alpha("light blue", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval)
lines(names(sd_steps_per_interval), mean_steps_per_interval + sd_steps_per_interval)
?lines
mean_steps_per_interval = tapply(act_data$steps, act_data$interval, mean)
sd_steps_per_interval = tapply(act_data$steps, act_data$interval, sd)
plot(act_data$interval, act_data$steps, col = alpha("light blue", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="black")
lines(names(sd_steps_per_interval), mean_steps_per_interval + sd_steps_per_interval, lwd=1.5, col="magenta")
lines(names(sd_steps_per_interval), mean_steps_per_interval - sd_steps_per_interval, lwd=1.5, col="magenta")
sd_steps_per_interval = tapply(act_data$steps, act_data$interval, summary)
sd_steps_per_interval
mean_steps_per_interval = tapply(act_data$steps, act_data$interval, mean)
plot(act_data$interval, act_data$steps, col = alpha("light blue", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="black")
mean_steps_per_interval = tapply(act_data$steps, act_data$interval, median)
plot(act_data$interval, act_data$steps, col = alpha("light blue", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="black")
mean_steps_per_interval = tapply(act_data$steps, act_data$interval, mean)
plot(act_data$interval, act_data$steps, col = alpha("light blue", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="black")
act_data <- read.csv(unz("activity.zip", "activity.csv"))
steps_per_day = tapply(act_data$steps, act_data$date, sum)
steps_per_day
mean(c(1,2,3,NA,4))
?xyplot
head(act_data)
tail(act_data)
act_data$date="2012-11-30"
act_data <- read.csv(unz("activity.zip", "activity.csv"))
act_data$date=="2012-11-30"
act_data[act_data$date=="2012-11-30",]
is.na(act_data$steps)
sum(is.na(act_data$steps))
set.seed(12345)
act_data[is.na(act_data$steps)),]
act_data[is.na(act_data$steps),]
act_data[!is.ma(act_data$steps),]
head(act_data)
missing_set <- act_data[is.na(act_data$steps),]
non_missing_set <- act_data[!is.na(act_data$steps),]
head(missing_set)
head(non_missing_set)
for (i in row_names(missing_set) ) {
print(i)
}
for (i in row.names(missing_set) ) {
print(i)
}
for (i in row.names(missing_set) ) {
act_data[i,]
}
for (i in row.names(missing_set) ) {
print(act_data[i,])
}
non_missing_set[1,"interval"]
non_missing_set[1,"interval"]
non_missing_set[2,"interval"]
non_missing_set[2,non_missing_set$interval=="5"]
non_missing_set[non_missing_set$interval=="5",]
for (i in row.names(missing_set) ) {
missing_interval = act_data[i,"interval"]
sample_set <- non_missing_set[non_missing_set$interval==missing_interval,"interval"]
print(sample(sample_set, 1, replace=TRUE))
}
for (i in row.names(missing_set) ) {
missing_interval = act_data[i,"interval"]
sample_set <- non_missing_set[non_missing_set$interval==missing_interval,"steps"]
samp <- sample(sample_set, size=1, replace=TRUE)
print(samp)
# act_data[i, "steps"] = samp
}
set.seed(12345)
missing_set <- act_data[is.na(act_data$steps),]
non_missing_set <- act_data[!is.na(act_data$steps),]
for (i in row.names(missing_set) ) {
missing_interval = act_data[i,"interval"]
sample_set <- non_missing_set[non_missing_set$interval==missing_interval,"steps"]
samp <- sample(sample_set, size=1, replace=TRUE)
print(samp)
act_data[i, "steps"] = samp
}
act_data <- read.csv(unz("activity.zip", "activity.csv"))
set.seed(12345)
missing_set <- act_data[is.na(act_data$steps),]
non_missing_set <- act_data[!is.na(act_data$steps),]
for (i in row.names(missing_set) ) {
missing_interval = act_data[i,"interval"]
sample_set <- non_missing_set[non_missing_set$interval==missing_interval,"steps"]
samp <- sample(sample_set, size=1, replace=TRUE)
act_data[i, "steps"] = samp
}
head(act_data)
mean_steps_per_interval = tapply(act_data$steps, act_data$interval, mean)
plot(act_data$interval, act_data$steps, col = alpha("light blue", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="black")
head(weekdays(act_data$data))
head(weekdays(act_data$date))
weekdays(as.Date(act_data$date))
act_data$dayOfWeek = weekdays(act_data$date)
act_data$dayOfWeek = weekdays(as.Date(act_data$date))
act_data$weekend = (act_data$dayOfWeek %in% c("Saturday", "Sunday"))
act_data_weekend = act_data[act_data$weekend == TRUE,]
mean_steps_per_interval = tapply(act_data_weekend$steps, act_data_weekend$interval, mean)
plot(act_data_weekend$interval, act_data_weekend$steps, col = alpha("light blue", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="black")
mean_steps_per_interval = tapply(act_data_weekend$steps, act_data_weekend$interval, mean)
plot(act_data_weekend$interval, act_data_weekend$steps, col = alpha("light red", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="black")
mean_steps_per_interval = tapply(act_data_weekend$steps, act_data_weekend$interval, mean)
plot(act_data_weekend$interval, act_data_weekend$steps, col = alpha("salmon", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="black")
quartz()
mean_steps_per_interval = tapply(act_data_weekend$steps, act_data_weekend$interval, mean)
plot(act_data_weekend$interval, act_data_weekend$steps, col = alpha("salmon", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="black")
quartz()
mean_steps_per_interval = tapply(act_data_weekday$steps, act_data_weekday$interval, mean)
plot(act_data_weekday$interval, act_data_weekday$steps, col = alpha("light blue", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="black")
mean_steps_per_interval = tapply(act_data_weekday$steps, act_data_weekday$interval, mean)
act_data_weekday = act_data[act_data$weekend == FALSE,]
quartz()
mean_steps_per_interval = tapply(act_data_weekday$steps, act_data_weekday$interval, mean)
plot(act_data_weekday$interval, act_data_weekday$steps, col = alpha("light blue", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="black")
quartz()
mean_steps_per_interval = tapply(act_data_weekend$steps, act_data_weekend$interval, mean)
plot(act_data_weekend$interval, act_data_weekend$steps, col = alpha("salmon", 0.25), pch=16)
points(act_data_weekday$interval, act_data_weekday$steps, col = alpha("light blue", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="red")
mean_steps_per_interval = tapply(act_data_weekday$steps, act_data_weekday$interval, mean)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="blue")
setwd("/Users/nielsh/Dropbox/Desktop symlink/data_science/05_reproduce/assign/RepData_PeerAssessment1")
act_data <- read.csv(unz("activity.zip", "activity.csv"))
act_data.no_na <- act_data[!is.na(act_data$steps),] # remove NAs
steps_per_day = tapply(act_data.no_na$steps, act_data.no_na$date, sum)
steps_per_day[is.na(steps_per_day)] = 0
# create a data frame
mean_total_steps<- round(mean(steps_per_day))
library(scales)
mean_steps_per_interval = tapply(act_data.no_na$steps, act_data.no_na$interval, mean)
plot(act_data.no_na$interval, act_data.no_na$steps, col = alpha("light blue", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="black")
library(scales)
mean_steps_per_interval = tapply(act_data.no_na$steps, act_data.no_na$interval, mean)
plot(act_data.no_na$interval, act_data.no_na$steps, col = alpha("light blue", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="black")
set.seed(12345)
missing_set <- act_data[is.na(act_data$steps),]
non_missing_set <- act_data[!is.na(act_data$steps),]
for (i in row.names(missing_set) ) {
missing_interval = act_data[i,"interval"]
sample_set <- non_missing_set[non_missing_set$interval==missing_interval,"steps"]
samp <- sample(sample_set, size=1, replace=TRUE)
act_data[i, "steps"] = samp
}
# plot the activity levels again to see if there are any differences
mean_steps_per_interval = tapply(act_data$steps, act_data$interval, mean)
plot(act_data$interval, act_data$steps, col = alpha("light blue", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="black")
act_data$dayOfWeek = weekdays(as.Date(act_data$date))
act_data$weekend = (act_data$dayOfWeek %in% c("Saturday", "Sunday"))
act_data_weekend = act_data[act_data$weekend == TRUE,]
act_data_weekday = act_data[act_data$weekend == FALSE,]
quartz()
mean_steps_per_interval = tapply(act_data_weekend$steps, act_data_weekend$interval, mean)
plot(act_data_weekend$interval, act_data_weekend$steps, col = alpha("salmon", 0.25), pch=16)
points(act_data_weekday$interval, act_data_weekday$steps, col = alpha("light blue", 0.25), pch=16)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="red")
mean_steps_per_interval = tapply(act_data_weekday$steps, act_data_weekday$interval, mean)
lines(names(mean_steps_per_interval), mean_steps_per_interval, lwd=3, col="blue")
